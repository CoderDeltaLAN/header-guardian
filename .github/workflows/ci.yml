name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  python:
    if: ${{ github.event_name != 'pull_request' || ( github.event.pull_request.draft == false && contains(join(github.event.pull_request.labels.*.name, ','), 'ready') ) }}
    name: python-${{ matrix.python-version }} on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.11', '3.12']
    runs-on: ${{ matrix.os }}
    env:
      PYTHONPATH: src
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v3
      - name: Install deps
        run: poetry install --no-interaction
      - name: Ruff lint
        run: poetry run ruff check .
      - name: Black check
        run: poetry run black --check .
      - name: Ruff format check
        run: poetry run ruff format --check .
      - name: Tests
        run: pytest -q
        env:
          PYTHONPATH: src
      - name: Mypy
        run: poetry run mypy .
