name: CI
on:
  push:
    branches: [ main, '**' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: python-${{ matrix.python-version }} on ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11','3.12']
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.python-version }} }

      - run: python -m pip install -U pip wheel build
      - run: pip install -U ruff black mypy pytest
      - run: pip install -e .

      - run: ruff check .
      - run: ruff format --check .
      - run: black --check .
      - run: pytest -q
      - run: mypy .

      - name: Build wheel
        run: python -m build

      - name: Install built wheel & smoke
        run: |
          python - <<'PY'
          import glob, subprocess, sys
          ws = glob.glob("dist/*.whl")
          assert ws, "wheel not built"
          subprocess.run([sys.executable,"-m","pip","install","-U","pip"], check=True)
          subprocess.run([sys.executable,"-m","pip","install",ws[0]], check=True)
          import header_guardian as m; print("import OK", getattr(m,"__version__","?"))
          PY
